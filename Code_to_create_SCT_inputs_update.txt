// Define user input
var percentile = 50; // which percentile do you want to export?

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Import collections
var L8sr = ee.ImageCollection("LANDSAT/LC08/C02/T1_L2");
var L7sr = ee.ImageCollection("LANDSAT/LE07/C02/T1_L2");
var L5sr = ee.ImageCollection("LANDSAT/LT05/C02/T1_L2");

var bounds = ee.FeatureCollection('users/Projects/MDB_single'); // Basin shapefile

Map.addLayer(bounds);
Map.centerObject(bounds);

// https://developers.google.com/earth-engine/guides/ic_visualization?hl=en
// Define a function to scale the data and mask unwanted pixels.
function maskL457sr(image) {
  // Bit 0 - Fill
  // Bit 1 - Dilated Cloud
  // Bit 2 - Unused
  // Bit 3 - Cloud
  // Bit 4 - Cloud Shadow
  var qaMask = image.select('QA_PIXEL').bitwiseAnd(parseInt('11111', 2)).eq(0);
  var saturationMask = image.select('QA_RADSAT').eq(0);

  // Apply the scaling factors to the appropriate bands.
  // var opticalBands = image.select('SR_B.').multiply(0.0000275).add(-0.2);
  // var thermalBand = image.select('ST_B6').multiply(0.00341802).add(149.0);
  var opticalBands = image.select('SR_B.').multiply(0.0000275).add(-0.2).multiply(10000);
  var thermalBands = image.select('ST_B.*').multiply(0.00341802).add(149.0);

  // Replace the original bands with the scaled ones and apply the masks.
  return image.addBands(opticalBands, null, true)
      .addBands(thermalBands, null, true)
      .updateMask(qaMask)
      .updateMask(saturationMask);
}

// Rename bands
var renameBands8 =  function(img){
  return img.select(['SR_B2','SR_B3','SR_B4','SR_B5','SR_B6','SR_B7']).rename(['blue','green','red','nir','swir1','swir2'])
};
var renameBands57 =  function(img){
  return img.select(['SR_B1','SR_B2','SR_B3','SR_B4','SR_B5','SR_B7']).rename(['blue','green','red','nir','swir1','swir2'])
};

// Filter Collections
var L8col = L8sr
              .filterBounds(bounds)
              .map(maskL457sr)
              .map(renameBands8);
var L7col = L7sr.filterDate('1999-01-01','2003-05-31')
              .filterBounds(bounds)
              .map(maskL457sr)
              .map(renameBands57);
var L5col = L5sr.filterDate('1986-09-01','2012-05-05')
              .filterBounds(bounds)
              .map(maskL457sr)
              .map(renameBands57);

var col = L8col.merge(L7col).merge(L5col);
print(col.first());

// For a single year
var start_date = ee.Date('2020-09-01');
var end_date = start_date.advance(16,'month');

print(start_date,end_date);

var image = col.filterDate(start_date,end_date)
               .reduce(ee.Reducer.percentile([percentile]))
               .clip(bounds)
               .int16();
print(image);
Map.addLayer(image,{min:0,max:3500,bands:['red_p50','green_p50','blue_p50']},'image');

var description = 'MDB_P'+ percentile + '_' + start_date.format('YYYY-MM-dd').getInfo() + '_' + end_date.format('YYYY-MM-dd').getInfo() + '_';

Export.image.toCloudStorage({
                  image: image,
                  description: description, 
                  fileNamePrefix:'SCT_2022/'+description,
                  bucket: 'mdba_gee_bucket',
                  region: bounds, 
                  scale: 30,
                  maxPixels: 100000000000});
